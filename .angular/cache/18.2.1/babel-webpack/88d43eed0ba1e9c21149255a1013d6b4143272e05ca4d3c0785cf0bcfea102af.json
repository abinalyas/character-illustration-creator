{"ast":null,"code":"'use strict';\n\nconst types = require('../../tokenizer/types.cjs');\nconst name = 'Parentheses';\nconst structure = {\n  children: [[]]\n};\nfunction parse(readSequence, recognizer) {\n  const start = this.tokenStart;\n  let children = null;\n  this.eat(types.LeftParenthesis);\n  children = readSequence.call(this, recognizer);\n  if (!this.eof) {\n    this.eat(types.RightParenthesis);\n  }\n  return {\n    type: 'Parentheses',\n    loc: this.getLocation(start, this.tokenStart),\n    children\n  };\n}\nfunction generate(node) {\n  this.token(types.LeftParenthesis, '(');\n  this.children(node);\n  this.token(types.RightParenthesis, ')');\n}\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}