{"ast":null,"code":"'use strict';\n\nconst types = require('../tokenizer/types.cjs');\nfunction readSequence(recognizer) {\n  const children = this.createList();\n  let space = false;\n  const context = {\n    recognizer\n  };\n  while (!this.eof) {\n    switch (this.tokenType) {\n      case types.Comment:\n        this.next();\n        continue;\n      case types.WhiteSpace:\n        space = true;\n        this.next();\n        continue;\n    }\n    let child = recognizer.getNode.call(this, context);\n    if (child === undefined) {\n      break;\n    }\n    if (space) {\n      if (recognizer.onWhiteSpace) {\n        recognizer.onWhiteSpace.call(this, child, children, context);\n      }\n      space = false;\n    }\n    children.push(child);\n  }\n  if (space && recognizer.onWhiteSpace) {\n    recognizer.onWhiteSpace.call(this, null, children, context);\n  }\n  return children;\n}\nexports.readSequence = readSequence;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}