{"ast":null,"code":"'use strict';\n\nconst {\n  detachNodeFromParent\n} = require('../lib/xast.js');\nconst {\n  attrsGroups\n} = require('./_collections.js');\nexports.name = 'removeScriptElement';\nexports.description = 'removes scripts (disabled by default)';\n\n/** Union of all event attributes. */\nconst eventAttrs = [...attrsGroups.animationEvent, ...attrsGroups.documentEvent, ...attrsGroups.documentElementEvent, ...attrsGroups.globalEvent, ...attrsGroups.graphicalEvent];\n\n/**\n * Remove scripts.\n *\n * https://www.w3.org/TR/SVG11/script.html\n *\n * @author Patrick Klingemann\n * @type {import('./plugins-types').Plugin<'removeScriptElement'>}\n */\nexports.fn = () => {\n  return {\n    element: {\n      enter: (node, parentNode) => {\n        if (node.name === 'script') {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n        for (const attr of eventAttrs) {\n          if (node.attributes[attr] != null) {\n            delete node.attributes[attr];\n          }\n        }\n      },\n      exit: (node, parentNode) => {\n        if (node.name !== 'a') {\n          return;\n        }\n        for (const attr of Object.keys(node.attributes)) {\n          if (attr === 'href' || attr.endsWith(':href')) {\n            if (node.attributes[attr] == null || !node.attributes[attr].trimStart().startsWith('javascript:')) {\n              continue;\n            }\n            const index = parentNode.children.indexOf(node);\n            parentNode.children.splice(index, 1, ...node.children);\n\n            // TODO remove legacy parentNode in v4\n            for (const child of node.children) {\n              Object.defineProperty(child, 'parentNode', {\n                writable: true,\n                value: parentNode\n              });\n            }\n          }\n        }\n      }\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}