{"ast":null,"code":"'use strict';\n\nexports.name = 'cleanupAttrs';\nexports.description = 'cleanups attributes from newlines, trailing and repeating spaces';\nconst regNewlinesNeedSpace = /(\\S)\\r?\\n(\\S)/g;\nconst regNewlines = /\\r?\\n/g;\nconst regSpaces = /\\s{2,}/g;\n\n/**\n * Cleanup attributes values from newlines, trailing and repeating spaces.\n *\n * @author Kir Belevich\n *\n * @type {import('./plugins-types').Plugin<'cleanupAttrs'>}\n */\nexports.fn = (root, params) => {\n  const {\n    newlines = true,\n    trim = true,\n    spaces = true\n  } = params;\n  return {\n    element: {\n      enter: node => {\n        for (const name of Object.keys(node.attributes)) {\n          if (newlines) {\n            // new line which requires a space instead of themself\n            node.attributes[name] = node.attributes[name].replace(regNewlinesNeedSpace, (match, p1, p2) => p1 + ' ' + p2);\n            // simple new line\n            node.attributes[name] = node.attributes[name].replace(regNewlines, '');\n          }\n          if (trim) {\n            node.attributes[name] = node.attributes[name].trim();\n          }\n          if (spaces) {\n            node.attributes[name] = node.attributes[name].replace(regSpaces, ' ');\n          }\n        }\n      }\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}