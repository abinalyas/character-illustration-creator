{"ast":null,"code":"'use strict';\n\nconst url = require('../../utils/url.cjs');\nconst string = require('../../utils/string.cjs');\nconst types = require('../../tokenizer/types.cjs');\nconst name = 'Url';\nconst structure = {\n  value: String\n};\n\n// <url-token> | <function-token> <string> )\nfunction parse() {\n  const start = this.tokenStart;\n  let value;\n  switch (this.tokenType) {\n    case types.Url:\n      value = url.decode(this.consume(types.Url));\n      break;\n    case types.Function:\n      if (!this.cmpStr(this.tokenStart, this.tokenEnd, 'url(')) {\n        this.error('Function name must be `url`');\n      }\n      this.eat(types.Function);\n      this.skipSC();\n      value = string.decode(this.consume(types.String));\n      this.skipSC();\n      if (!this.eof) {\n        this.eat(types.RightParenthesis);\n      }\n      break;\n    default:\n      this.error('Url or Function is expected');\n  }\n  return {\n    type: 'Url',\n    loc: this.getLocation(start, this.tokenStart),\n    value\n  };\n}\nfunction generate(node) {\n  this.token(types.Url, url.encode(node.value));\n}\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}