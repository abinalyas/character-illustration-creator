{"ast":null,"code":"'use strict';\n\nconst _Number = require('./Number.cjs');\nconst MATH_FUNCTIONS = new Set(['calc', 'min', 'max', 'clamp']);\nconst LENGTH_UNIT = new Set([\n// absolute length units\n'px', 'mm', 'cm', 'in', 'pt', 'pc',\n// relative length units\n'em', 'ex', 'ch', 'rem',\n// viewport-percentage lengths\n'vh', 'vw', 'vmin', 'vmax', 'vm']);\nfunction compressDimension(node, item) {\n  const value = _Number.packNumber(node.value);\n  node.value = value;\n  if (value === '0' && this.declaration !== null && this.atrulePrelude === null) {\n    const unit = node.unit.toLowerCase();\n\n    // only length values can be compressed\n    if (!LENGTH_UNIT.has(unit)) {\n      return;\n    }\n\n    // issue #362: shouldn't remove unit in -ms-flex since it breaks flex in IE10/11\n    // issue #200: shouldn't remove unit in flex since it breaks flex in IE10/11\n    if (this.declaration.property === '-ms-flex' || this.declaration.property === 'flex') {\n      return;\n    }\n\n    // issue #222: don't remove units inside calc\n    if (this.function && MATH_FUNCTIONS.has(this.function.name)) {\n      return;\n    }\n    item.data = {\n      type: 'Number',\n      loc: node.loc,\n      value\n    };\n  }\n}\nmodule.exports = compressDimension;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}