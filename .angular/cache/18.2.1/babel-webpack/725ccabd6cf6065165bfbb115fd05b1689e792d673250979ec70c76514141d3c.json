{"ast":null,"code":"'use strict';\n\nconst {\n  detachNodeFromParent\n} = require('../lib/xast.js');\nconst {\n  elemsGroups\n} = require('./_collections.js');\nexports.name = 'removeEmptyContainers';\nexports.description = 'removes empty container elements';\n\n/**\n * Remove empty containers.\n *\n * @see https://www.w3.org/TR/SVG11/intro.html#TermContainerElement\n *\n * @example\n * <defs/>\n *\n * @example\n * <g><marker><a/></marker></g>\n *\n * @author Kir Belevich\n *\n * @type {import('./plugins-types').Plugin<'removeEmptyContainers'>}\n */\nexports.fn = () => {\n  return {\n    element: {\n      exit: (node, parentNode) => {\n        // remove only empty non-svg containers\n        if (node.name === 'svg' || !elemsGroups.container.has(node.name) || node.children.length !== 0) {\n          return;\n        }\n        // empty patterns may contain reusable configuration\n        if (node.name === 'pattern' && Object.keys(node.attributes).length !== 0) {\n          return;\n        }\n        // The <g> may not have content, but the filter may cause a rectangle\n        // to be created and filled with pattern.\n        if (node.name === 'g' && node.attributes.filter != null) {\n          return;\n        }\n        // empty <mask> hides masked element\n        if (node.name === 'mask' && node.attributes.id != null) {\n          return;\n        }\n        if (parentNode.type === 'element' && parentNode.name === 'switch') {\n          return;\n        }\n        detachNodeFromParent(node, parentNode);\n      }\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}