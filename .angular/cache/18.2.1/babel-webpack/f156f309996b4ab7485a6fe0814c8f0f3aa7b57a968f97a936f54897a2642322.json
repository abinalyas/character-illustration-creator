{"ast":null,"code":"'use strict';\n\nconst index = require('../tokenizer/index.cjs');\nconst astToTokens = {\n  decorator(handlers) {\n    const tokens = [];\n    let curNode = null;\n    return {\n      ...handlers,\n      node(node) {\n        const tmp = curNode;\n        curNode = node;\n        handlers.node.call(this, node);\n        curNode = tmp;\n      },\n      emit(value, type, auto) {\n        tokens.push({\n          type,\n          value,\n          node: auto ? null : curNode\n        });\n      },\n      result() {\n        return tokens;\n      }\n    };\n  }\n};\nfunction stringToTokens(str) {\n  const tokens = [];\n  index.tokenize(str, (type, start, end) => tokens.push({\n    type,\n    value: str.slice(start, end),\n    node: null\n  }));\n  return tokens;\n}\nfunction prepareTokens(value, syntax) {\n  if (typeof value === 'string') {\n    return stringToTokens(value);\n  }\n  return syntax.generate(value, astToTokens);\n}\nmodule.exports = prepareTokens;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}