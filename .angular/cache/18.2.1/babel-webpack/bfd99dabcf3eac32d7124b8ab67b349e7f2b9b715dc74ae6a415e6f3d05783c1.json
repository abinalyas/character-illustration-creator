{"ast":null,"code":"'use strict';\n\n// https://www.w3.org/TR/SVG11/intro.html#Definitions\n\n/**\n * @type {Record<string, Set<string>>}\n */\nexports.elemsGroups = {\n  animation: new Set(['animate', 'animateColor', 'animateMotion', 'animateTransform', 'set']),\n  descriptive: new Set(['desc', 'metadata', 'title']),\n  shape: new Set(['circle', 'ellipse', 'line', 'path', 'polygon', 'polyline', 'rect']),\n  structural: new Set(['defs', 'g', 'svg', 'symbol', 'use']),\n  paintServer: new Set(['hatch', 'linearGradient', 'meshGradient', 'pattern', 'radialGradient', 'solidColor']),\n  nonRendering: new Set(['clipPath', 'filter', 'linearGradient', 'marker', 'mask', 'pattern', 'radialGradient', 'solidColor', 'symbol']),\n  container: new Set(['a', 'defs', 'foreignObject', 'g', 'marker', 'mask', 'missing-glyph', 'pattern', 'svg', 'switch', 'symbol']),\n  textContent: new Set(['altGlyph', 'altGlyphDef', 'altGlyphItem', 'glyph', 'glyphRef', 'text', 'textPath', 'tref', 'tspan']),\n  textContentChild: new Set(['altGlyph', 'textPath', 'tref', 'tspan']),\n  lightSource: new Set(['feDiffuseLighting', 'feDistantLight', 'fePointLight', 'feSpecularLighting', 'feSpotLight']),\n  filterPrimitive: new Set(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'feSpecularLighting', 'feTile', 'feTurbulence'])\n};\n\n/**\n * Elements where adding or removing whitespace may effect rendering, metadata,\n * or semantic meaning.\n *\n * @see https://developer.mozilla.org/docs/Web/HTML/Element/pre\n */\nexports.textElems = new Set([...exports.elemsGroups.textContent, 'pre', 'title']);\nexports.pathElems = new Set(['glyph', 'missing-glyph', 'path']);\n\n/**\n * @type {Record<string, Set<string>>}\n * @see https://www.w3.org/TR/SVG11/intro.html#Definitions\n */\nexports.attrsGroups = {\n  animationAddition: new Set(['additive', 'accumulate']),\n  animationAttributeTarget: new Set(['attributeType', 'attributeName']),\n  animationEvent: new Set(['onbegin', 'onend', 'onrepeat', 'onload']),\n  animationTiming: new Set(['begin', 'dur', 'end', 'fill', 'max', 'min', 'repeatCount', 'repeatDur', 'restart']),\n  animationValue: new Set(['by', 'calcMode', 'from', 'keySplines', 'keyTimes', 'to', 'values']),\n  conditionalProcessing: new Set(['requiredExtensions', 'requiredFeatures', 'systemLanguage']),\n  core: new Set(['id', 'tabindex', 'xml:base', 'xml:lang', 'xml:space']),\n  graphicalEvent: new Set(['onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup']),\n  presentation: new Set(['alignment-baseline', 'baseline-shift', 'clip-path', 'clip-rule', 'clip', 'color-interpolation-filters', 'color-interpolation', 'color-profile', 'color-rendering', 'color', 'cursor', 'direction', 'display', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'fill', 'filter', 'flood-color', 'flood-opacity', 'font-family', 'font-size-adjust', 'font-size', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'mask', 'opacity', 'overflow', 'paint-order', 'pointer-events', 'shape-rendering', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'stroke', 'text-anchor', 'text-decoration', 'text-overflow', 'text-rendering', 'transform-origin', 'transform', 'unicode-bidi', 'vector-effect', 'visibility', 'word-spacing', 'writing-mode']),\n  xlink: new Set(['xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type']),\n  documentEvent: new Set(['onabort', 'onerror', 'onresize', 'onscroll', 'onunload', 'onzoom']),\n  documentElementEvent: new Set(['oncopy', 'oncut', 'onpaste']),\n  globalEvent: new Set(['oncancel', 'oncanplay', 'oncanplaythrough', 'onchange', 'onclick', 'onclose', 'oncuechange', 'ondblclick', 'ondrag', 'ondragend', 'ondragenter', 'ondragleave', 'ondragover', 'ondragstart', 'ondrop', 'ondurationchange', 'onemptied', 'onended', 'onerror', 'onfocus', 'oninput', 'oninvalid', 'onkeydown', 'onkeypress', 'onkeyup', 'onload', 'onloadeddata', 'onloadedmetadata', 'onloadstart', 'onmousedown', 'onmouseenter', 'onmouseleave', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onpause', 'onplay', 'onplaying', 'onprogress', 'onratechange', 'onreset', 'onresize', 'onscroll', 'onseeked', 'onseeking', 'onselect', 'onshow', 'onstalled', 'onsubmit', 'onsuspend', 'ontimeupdate', 'ontoggle', 'onvolumechange', 'onwaiting']),\n  filterPrimitive: new Set(['x', 'y', 'width', 'height', 'result']),\n  transferFunction: new Set(['amplitude', 'exponent', 'intercept', 'offset', 'slope', 'tableValues', 'type'])\n};\n\n/**\n * @type {Record<string, Record<string, string>>}\n */\nexports.attrsGroupsDefaults = {\n  core: {\n    'xml:space': 'default'\n  },\n  presentation: {\n    clip: 'auto',\n    'clip-path': 'none',\n    'clip-rule': 'nonzero',\n    mask: 'none',\n    opacity: '1',\n    'stop-color': '#000',\n    'stop-opacity': '1',\n    'fill-opacity': '1',\n    'fill-rule': 'nonzero',\n    fill: '#000',\n    stroke: 'none',\n    'stroke-width': '1',\n    'stroke-linecap': 'butt',\n    'stroke-linejoin': 'miter',\n    'stroke-miterlimit': '4',\n    'stroke-dasharray': 'none',\n    'stroke-dashoffset': '0',\n    'stroke-opacity': '1',\n    'paint-order': 'normal',\n    'vector-effect': 'none',\n    display: 'inline',\n    visibility: 'visible',\n    'marker-start': 'none',\n    'marker-mid': 'none',\n    'marker-end': 'none',\n    'color-interpolation': 'sRGB',\n    'color-interpolation-filters': 'linearRGB',\n    'color-rendering': 'auto',\n    'shape-rendering': 'auto',\n    'text-rendering': 'auto',\n    'image-rendering': 'auto',\n    'font-style': 'normal',\n    'font-variant': 'normal',\n    'font-weight': 'normal',\n    'font-stretch': 'normal',\n    'font-size': 'medium',\n    'font-size-adjust': 'none',\n    kerning: 'auto',\n    'letter-spacing': 'normal',\n    'word-spacing': 'normal',\n    'text-decoration': 'none',\n    'text-anchor': 'start',\n    'text-overflow': 'clip',\n    'writing-mode': 'lr-tb',\n    'glyph-orientation-vertical': 'auto',\n    'glyph-orientation-horizontal': '0deg',\n    direction: 'ltr',\n    'unicode-bidi': 'normal',\n    'dominant-baseline': 'auto',\n    'alignment-baseline': 'baseline',\n    'baseline-shift': 'baseline'\n  },\n  transferFunction: {\n    slope: '1',\n    intercept: '0',\n    amplitude: '1',\n    exponent: '1',\n    offset: '0'\n  }\n};\n\n/**\n * @type {Record<string, {\n *   attrsGroups: Set<string>,\n *   attrs?: Set<string>,\n *   defaults?: Record<string, string>,\n *   contentGroups?: Set<string>,\n *   content?: Set<string>,\n * }>}\n * @see https://www.w3.org/TR/SVG11/eltindex.html\n */\nexports.elems = {\n  a: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'graphicalEvent', 'presentation', 'xlink']),\n    attrs: new Set(['class', 'externalResourcesRequired', 'style', 'target', 'transform']),\n    defaults: {\n      target: '_self'\n    },\n    contentGroups: new Set(['animation', 'descriptive', 'paintServer', 'shape', 'structural']),\n    content: new Set(['a', 'altGlyphDef', 'clipPath', 'color-profile', 'cursor', 'filter', 'font-face', 'font', 'foreignObject', 'image', 'marker', 'mask', 'pattern', 'script', 'style', 'switch', 'text', 'view',\n    // not spec compliant\n    'tspan'])\n  },\n  altGlyph: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'graphicalEvent', 'presentation', 'xlink']),\n    attrs: new Set(['class', 'dx', 'dy', 'externalResourcesRequired', 'format', 'glyphRef', 'rotate', 'style', 'x', 'y'])\n  },\n  altGlyphDef: {\n    attrsGroups: new Set(['core']),\n    content: new Set(['glyphRef'])\n  },\n  altGlyphItem: {\n    attrsGroups: new Set(['core']),\n    content: new Set(['glyphRef', 'altGlyphItem'])\n  },\n  animate: {\n    attrsGroups: new Set(['animationAddition', 'animationAttributeTarget', 'animationEvent', 'animationTiming', 'animationValue', 'conditionalProcessing', 'core', 'presentation', 'xlink']),\n    attrs: new Set(['externalResourcesRequired']),\n    contentGroups: new Set(['descriptive'])\n  },\n  animateColor: {\n    attrsGroups: new Set(['animationAddition', 'animationAttributeTarget', 'animationEvent', 'animationTiming', 'animationValue', 'conditionalProcessing', 'core', 'presentation', 'xlink']),\n    attrs: new Set(['externalResourcesRequired']),\n    contentGroups: new Set(['descriptive'])\n  },\n  animateMotion: {\n    attrsGroups: new Set(['animationAddition', 'animationEvent', 'animationTiming', 'animationValue', 'conditionalProcessing', 'core', 'xlink']),\n    attrs: new Set(['externalResourcesRequired', 'keyPoints', 'origin', 'path', 'rotate']),\n    defaults: {\n      rotate: '0'\n    },\n    contentGroups: new Set(['descriptive']),\n    content: new Set(['mpath'])\n  },\n  animateTransform: {\n    attrsGroups: new Set(['animationAddition', 'animationAttributeTarget', 'animationEvent', 'animationTiming', 'animationValue', 'conditionalProcessing', 'core', 'xlink']),\n    attrs: new Set(['externalResourcesRequired', 'type']),\n    contentGroups: new Set(['descriptive'])\n  },\n  circle: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'graphicalEvent', 'presentation']),\n    attrs: new Set(['class', 'cx', 'cy', 'externalResourcesRequired', 'r', 'style', 'transform']),\n    defaults: {\n      cx: '0',\n      cy: '0'\n    },\n    contentGroups: new Set(['animation', 'descriptive'])\n  },\n  clipPath: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'presentation']),\n    attrs: new Set(['class', 'clipPathUnits', 'externalResourcesRequired', 'style', 'transform']),\n    defaults: {\n      clipPathUnits: 'userSpaceOnUse'\n    },\n    contentGroups: new Set(['animation', 'descriptive', 'shape']),\n    content: new Set(['text', 'use'])\n  },\n  'color-profile': {\n    attrsGroups: new Set(['core', 'xlink']),\n    attrs: new Set(['local', 'name', 'rendering-intent']),\n    defaults: {\n      name: 'sRGB',\n      'rendering-intent': 'auto'\n    },\n    contentGroups: new Set(['descriptive'])\n  },\n  cursor: {\n    attrsGroups: new Set(['core', 'conditionalProcessing', 'xlink']),\n    attrs: new Set(['externalResourcesRequired', 'x', 'y']),\n    defaults: {\n      x: '0',\n      y: '0'\n    },\n    contentGroups: new Set(['descriptive'])\n  },\n  defs: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'graphicalEvent', 'presentation']),\n    attrs: new Set(['class', 'externalResourcesRequired', 'style', 'transform']),\n    contentGroups: new Set(['animation', 'descriptive', 'paintServer', 'shape', 'structural']),\n    content: new Set(['a', 'altGlyphDef', 'clipPath', 'color-profile', 'cursor', 'filter', 'font-face', 'font', 'foreignObject', 'image', 'marker', 'mask', 'pattern', 'script', 'style', 'switch', 'text', 'view'])\n  },\n  desc: {\n    attrsGroups: new Set(['core']),\n    attrs: new Set(['class', 'style'])\n  },\n  ellipse: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'graphicalEvent', 'presentation']),\n    attrs: new Set(['class', 'cx', 'cy', 'externalResourcesRequired', 'rx', 'ry', 'style', 'transform']),\n    defaults: {\n      cx: '0',\n      cy: '0'\n    },\n    contentGroups: new Set(['animation', 'descriptive'])\n  },\n  feBlend: {\n    attrsGroups: new Set(['core', 'presentation', 'filterPrimitive']),\n    attrs: new Set(['class', 'style',\n    // TODO: in - 'If no value is provided and this is the first filter primitive,\n    // then this filter primitive will use SourceGraphic as its input'\n    'in', 'in2', 'mode']),\n    defaults: {\n      mode: 'normal'\n    },\n    content: new Set(['animate', 'set'])\n  },\n  feColorMatrix: {\n    attrsGroups: new Set(['core', 'presentation', 'filterPrimitive']),\n    attrs: new Set(['class', 'style', 'in', 'type', 'values']),\n    defaults: {\n      type: 'matrix'\n    },\n    content: new Set(['animate', 'set'])\n  },\n  feComponentTransfer: {\n    attrsGroups: new Set(['core', 'presentation', 'filterPrimitive']),\n    attrs: new Set(['class', 'style', 'in']),\n    content: new Set(['feFuncA', 'feFuncB', 'feFuncG', 'feFuncR'])\n  },\n  feComposite: {\n    attrsGroups: new Set(['core', 'presentation', 'filterPrimitive']),\n    attrs: new Set(['class', 'in', 'in2', 'k1', 'k2', 'k3', 'k4', 'operator', 'style']),\n    defaults: {\n      operator: 'over',\n      k1: '0',\n      k2: '0',\n      k3: '0',\n      k4: '0'\n    },\n    content: new Set(['animate', 'set'])\n  },\n  feConvolveMatrix: {\n    attrsGroups: new Set(['core', 'presentation', 'filterPrimitive']),\n    attrs: new Set(['class', 'in', 'kernelMatrix', 'order', 'style',\n    // TODO: divisor - 'The default value is the sum of all values in kernelMatrix,\n    // with the exception that if the sum is zero, then the divisor is set to 1'\n    'bias', 'divisor',\n    // TODO: targetX - 'By default, the convolution matrix is centered in X over each\n    // pixel of the input image (i.e., targetX = floor ( orderX / 2 ))'\n    'edgeMode', 'targetX', 'targetY',\n    // TODO: kernelUnitLength - 'The first number is the <dx> value. The second number\n    // is the <dy> value. If the <dy> value is not specified, it defaults to the same value as <dx>'\n    'kernelUnitLength', 'preserveAlpha']),\n    defaults: {\n      order: '3',\n      bias: '0',\n      edgeMode: 'duplicate',\n      preserveAlpha: 'false'\n    },\n    content: new Set(['animate', 'set'])\n  },\n  feDiffuseLighting: {\n    attrsGroups: new Set(['core', 'presentation', 'filterPrimitive']),\n    attrs: new Set(['class', 'diffuseConstant', 'in', 'kernelUnitLength', 'style', 'surfaceScale']),\n    defaults: {\n      surfaceScale: '1',\n      diffuseConstant: '1'\n    },\n    contentGroups: new Set(['descriptive']),\n    content: new Set([\n    // TODO: 'exactly one light source element, in any order'\n    'feDistantLight', 'fePointLight', 'feSpotLight'])\n  },\n  feDisplacementMap: {\n    attrsGroups: new Set(['core', 'presentation', 'filterPrimitive']),\n    attrs: new Set(['class', 'in', 'in2', 'scale', 'style', 'xChannelSelector', 'yChannelSelector']),\n    defaults: {\n      scale: '0',\n      xChannelSelector: 'A',\n      yChannelSelector: 'A'\n    },\n    content: new Set(['animate', 'set'])\n  },\n  feDistantLight: {\n    attrsGroups: new Set(['core']),\n    attrs: new Set(['azimuth', 'elevation']),\n    defaults: {\n      azimuth: '0',\n      elevation: '0'\n    },\n    content: new Set(['animate', 'set'])\n  },\n  feFlood: {\n    attrsGroups: new Set(['core', 'presentation', 'filterPrimitive']),\n    attrs: new Set(['class', 'style']),\n    content: new Set(['animate', 'animateColor', 'set'])\n  },\n  feFuncA: {\n    attrsGroups: new Set(['core', 'transferFunction']),\n    content: new Set(['set', 'animate'])\n  },\n  feFuncB: {\n    attrsGroups: new Set(['core', 'transferFunction']),\n    content: new Set(['set', 'animate'])\n  },\n  feFuncG: {\n    attrsGroups: new Set(['core', 'transferFunction']),\n    content: new Set(['set', 'animate'])\n  },\n  feFuncR: {\n    attrsGroups: new Set(['core', 'transferFunction']),\n    content: new Set(['set', 'animate'])\n  },\n  feGaussianBlur: {\n    attrsGroups: new Set(['core', 'presentation', 'filterPrimitive']),\n    attrs: new Set(['class', 'style', 'in', 'stdDeviation']),\n    defaults: {\n      stdDeviation: '0'\n    },\n    content: new Set(['set', 'animate'])\n  },\n  feImage: {\n    attrsGroups: new Set(['core', 'presentation', 'filterPrimitive', 'xlink']),\n    attrs: new Set(['class', 'externalResourcesRequired', 'href', 'preserveAspectRatio', 'style', 'xlink:href']),\n    defaults: {\n      preserveAspectRatio: 'xMidYMid meet'\n    },\n    content: new Set(['animate', 'animateTransform', 'set'])\n  },\n  feMerge: {\n    attrsGroups: new Set(['core', 'presentation', 'filterPrimitive']),\n    attrs: new Set(['class', 'style']),\n    content: new Set(['feMergeNode'])\n  },\n  feMergeNode: {\n    attrsGroups: new Set(['core']),\n    attrs: new Set(['in']),\n    content: new Set(['animate', 'set'])\n  },\n  feMorphology: {\n    attrsGroups: new Set(['core', 'presentation', 'filterPrimitive']),\n    attrs: new Set(['class', 'style', 'in', 'operator', 'radius']),\n    defaults: {\n      operator: 'erode',\n      radius: '0'\n    },\n    content: new Set(['animate', 'set'])\n  },\n  feOffset: {\n    attrsGroups: new Set(['core', 'presentation', 'filterPrimitive']),\n    attrs: new Set(['class', 'style', 'in', 'dx', 'dy']),\n    defaults: {\n      dx: '0',\n      dy: '0'\n    },\n    content: new Set(['animate', 'set'])\n  },\n  fePointLight: {\n    attrsGroups: new Set(['core']),\n    attrs: new Set(['x', 'y', 'z']),\n    defaults: {\n      x: '0',\n      y: '0',\n      z: '0'\n    },\n    content: new Set(['animate', 'set'])\n  },\n  feSpecularLighting: {\n    attrsGroups: new Set(['core', 'presentation', 'filterPrimitive']),\n    attrs: new Set(['class', 'in', 'kernelUnitLength', 'specularConstant', 'specularExponent', 'style', 'surfaceScale']),\n    defaults: {\n      surfaceScale: '1',\n      specularConstant: '1',\n      specularExponent: '1'\n    },\n    contentGroups: new Set(['descriptive',\n    // TODO: exactly one 'light source element'\n    'lightSource'])\n  },\n  feSpotLight: {\n    attrsGroups: new Set(['core']),\n    attrs: new Set(['limitingConeAngle', 'pointsAtX', 'pointsAtY', 'pointsAtZ', 'specularExponent', 'x', 'y', 'z']),\n    defaults: {\n      x: '0',\n      y: '0',\n      z: '0',\n      pointsAtX: '0',\n      pointsAtY: '0',\n      pointsAtZ: '0',\n      specularExponent: '1'\n    },\n    content: new Set(['animate', 'set'])\n  },\n  feTile: {\n    attrsGroups: new Set(['core', 'presentation', 'filterPrimitive']),\n    attrs: new Set(['class', 'style', 'in']),\n    content: new Set(['animate', 'set'])\n  },\n  feTurbulence: {\n    attrsGroups: new Set(['core', 'presentation', 'filterPrimitive']),\n    attrs: new Set(['baseFrequency', 'class', 'numOctaves', 'seed', 'stitchTiles', 'style', 'type']),\n    defaults: {\n      baseFrequency: '0',\n      numOctaves: '1',\n      seed: '0',\n      stitchTiles: 'noStitch',\n      type: 'turbulence'\n    },\n    content: new Set(['animate', 'set'])\n  },\n  filter: {\n    attrsGroups: new Set(['core', 'presentation', 'xlink']),\n    attrs: new Set(['class', 'externalResourcesRequired', 'filterRes', 'filterUnits', 'height', 'href', 'primitiveUnits', 'style', 'width', 'x', 'xlink:href', 'y']),\n    defaults: {\n      primitiveUnits: 'userSpaceOnUse',\n      x: '-10%',\n      y: '-10%',\n      width: '120%',\n      height: '120%'\n    },\n    contentGroups: new Set(['descriptive', 'filterPrimitive']),\n    content: new Set(['animate', 'set'])\n  },\n  font: {\n    attrsGroups: new Set(['core', 'presentation']),\n    attrs: new Set(['class', 'externalResourcesRequired', 'horiz-adv-x', 'horiz-origin-x', 'horiz-origin-y', 'style', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y']),\n    defaults: {\n      'horiz-origin-x': '0',\n      'horiz-origin-y': '0'\n    },\n    contentGroups: new Set(['descriptive']),\n    content: new Set(['font-face', 'glyph', 'hkern', 'missing-glyph', 'vkern'])\n  },\n  'font-face': {\n    attrsGroups: new Set(['core']),\n    attrs: new Set(['font-family', 'font-style', 'font-variant', 'font-weight', 'font-stretch', 'font-size', 'unicode-range', 'units-per-em', 'panose-1', 'stemv', 'stemh', 'slope', 'cap-height', 'x-height', 'accent-height', 'ascent', 'descent', 'widths', 'bbox', 'ideographic', 'alphabetic', 'mathematical', 'hanging', 'v-ideographic', 'v-alphabetic', 'v-mathematical', 'v-hanging', 'underline-position', 'underline-thickness', 'strikethrough-position', 'strikethrough-thickness', 'overline-position', 'overline-thickness']),\n    defaults: {\n      'font-style': 'all',\n      'font-variant': 'normal',\n      'font-weight': 'all',\n      'font-stretch': 'normal',\n      'unicode-range': 'U+0-10FFFF',\n      'units-per-em': '1000',\n      'panose-1': '0 0 0 0 0 0 0 0 0 0',\n      slope: '0'\n    },\n    contentGroups: new Set(['descriptive']),\n    content: new Set([\n    // TODO: \"at most one 'font-face-src' element\"\n    'font-face-src'])\n  },\n  // TODO: empty content\n  'font-face-format': {\n    attrsGroups: new Set(['core']),\n    attrs: new Set(['string'])\n  },\n  'font-face-name': {\n    attrsGroups: new Set(['core']),\n    attrs: new Set(['name'])\n  },\n  'font-face-src': {\n    attrsGroups: new Set(['core']),\n    content: new Set(['font-face-name', 'font-face-uri'])\n  },\n  'font-face-uri': {\n    attrsGroups: new Set(['core', 'xlink']),\n    attrs: new Set(['href', 'xlink:href']),\n    content: new Set(['font-face-format'])\n  },\n  foreignObject: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'graphicalEvent', 'presentation']),\n    attrs: new Set(['class', 'externalResourcesRequired', 'height', 'style', 'transform', 'width', 'x', 'y']),\n    defaults: {\n      x: '0',\n      y: '0'\n    }\n  },\n  g: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'graphicalEvent', 'presentation']),\n    attrs: new Set(['class', 'externalResourcesRequired', 'style', 'transform']),\n    contentGroups: new Set(['animation', 'descriptive', 'paintServer', 'shape', 'structural']),\n    content: new Set(['a', 'altGlyphDef', 'clipPath', 'color-profile', 'cursor', 'filter', 'font-face', 'font', 'foreignObject', 'image', 'marker', 'mask', 'pattern', 'script', 'style', 'switch', 'text', 'view'])\n  },\n  glyph: {\n    attrsGroups: new Set(['core', 'presentation']),\n    attrs: new Set(['arabic-form', 'class', 'd', 'glyph-name', 'horiz-adv-x', 'lang', 'orientation', 'style', 'unicode', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y']),\n    defaults: {\n      'arabic-form': 'initial'\n    },\n    contentGroups: new Set(['animation', 'descriptive', 'paintServer', 'shape', 'structural']),\n    content: new Set(['a', 'altGlyphDef', 'clipPath', 'color-profile', 'cursor', 'filter', 'font-face', 'font', 'foreignObject', 'image', 'marker', 'mask', 'pattern', 'script', 'style', 'switch', 'text', 'view'])\n  },\n  glyphRef: {\n    attrsGroups: new Set(['core', 'presentation']),\n    attrs: new Set(['class', 'd', 'horiz-adv-x', 'style', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y']),\n    contentGroups: new Set(['animation', 'descriptive', 'paintServer', 'shape', 'structural']),\n    content: new Set(['a', 'altGlyphDef', 'clipPath', 'color-profile', 'cursor', 'filter', 'font-face', 'font', 'foreignObject', 'image', 'marker', 'mask', 'pattern', 'script', 'style', 'switch', 'text', 'view'])\n  },\n  hatch: {\n    attrsGroups: new Set(['core', 'presentation', 'xlink']),\n    attrs: new Set(['class', 'hatchContentUnits', 'hatchUnits', 'pitch', 'rotate', 'style', 'transform', 'x', 'y']),\n    defaults: {\n      hatchUnits: 'objectBoundingBox',\n      hatchContentUnits: 'userSpaceOnUse',\n      x: '0',\n      y: '0',\n      pitch: '0',\n      rotate: '0'\n    },\n    contentGroups: new Set(['animation', 'descriptive']),\n    content: new Set(['hatchPath'])\n  },\n  hatchPath: {\n    attrsGroups: new Set(['core', 'presentation', 'xlink']),\n    attrs: new Set(['class', 'style', 'd', 'offset']),\n    defaults: {\n      offset: '0'\n    },\n    contentGroups: new Set(['animation', 'descriptive'])\n  },\n  hkern: {\n    attrsGroups: new Set(['core']),\n    attrs: new Set(['u1', 'g1', 'u2', 'g2', 'k'])\n  },\n  image: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'graphicalEvent', 'presentation', 'xlink']),\n    attrs: new Set(['class', 'externalResourcesRequired', 'height', 'href', 'preserveAspectRatio', 'style', 'transform', 'width', 'x', 'xlink:href', 'y']),\n    defaults: {\n      x: '0',\n      y: '0',\n      preserveAspectRatio: 'xMidYMid meet'\n    },\n    contentGroups: new Set(['animation', 'descriptive'])\n  },\n  line: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'graphicalEvent', 'presentation']),\n    attrs: new Set(['class', 'externalResourcesRequired', 'style', 'transform', 'x1', 'x2', 'y1', 'y2']),\n    defaults: {\n      x1: '0',\n      y1: '0',\n      x2: '0',\n      y2: '0'\n    },\n    contentGroups: new Set(['animation', 'descriptive'])\n  },\n  linearGradient: {\n    attrsGroups: new Set(['core', 'presentation', 'xlink']),\n    attrs: new Set(['class', 'externalResourcesRequired', 'gradientTransform', 'gradientUnits', 'href', 'spreadMethod', 'style', 'x1', 'x2', 'xlink:href', 'y1', 'y2']),\n    defaults: {\n      x1: '0',\n      y1: '0',\n      x2: '100%',\n      y2: '0',\n      spreadMethod: 'pad'\n    },\n    contentGroups: new Set(['descriptive']),\n    content: new Set(['animate', 'animateTransform', 'set', 'stop'])\n  },\n  marker: {\n    attrsGroups: new Set(['core', 'presentation']),\n    attrs: new Set(['class', 'externalResourcesRequired', 'markerHeight', 'markerUnits', 'markerWidth', 'orient', 'preserveAspectRatio', 'refX', 'refY', 'style', 'viewBox']),\n    defaults: {\n      markerUnits: 'strokeWidth',\n      refX: '0',\n      refY: '0',\n      markerWidth: '3',\n      markerHeight: '3'\n    },\n    contentGroups: new Set(['animation', 'descriptive', 'paintServer', 'shape', 'structural']),\n    content: new Set(['a', 'altGlyphDef', 'clipPath', 'color-profile', 'cursor', 'filter', 'font-face', 'font', 'foreignObject', 'image', 'marker', 'mask', 'pattern', 'script', 'style', 'switch', 'text', 'view'])\n  },\n  mask: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'presentation']),\n    attrs: new Set(['class', 'externalResourcesRequired', 'height', 'mask-type', 'maskContentUnits', 'maskUnits', 'style', 'width', 'x', 'y']),\n    defaults: {\n      maskUnits: 'objectBoundingBox',\n      maskContentUnits: 'userSpaceOnUse',\n      x: '-10%',\n      y: '-10%',\n      width: '120%',\n      height: '120%'\n    },\n    contentGroups: new Set(['animation', 'descriptive', 'paintServer', 'shape', 'structural']),\n    content: new Set(['a', 'altGlyphDef', 'clipPath', 'color-profile', 'cursor', 'filter', 'font-face', 'font', 'foreignObject', 'image', 'marker', 'mask', 'pattern', 'script', 'style', 'switch', 'text', 'view'])\n  },\n  metadata: {\n    attrsGroups: new Set(['core'])\n  },\n  'missing-glyph': {\n    attrsGroups: new Set(['core', 'presentation']),\n    attrs: new Set(['class', 'd', 'horiz-adv-x', 'style', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y']),\n    contentGroups: new Set(['animation', 'descriptive', 'paintServer', 'shape', 'structural']),\n    content: new Set(['a', 'altGlyphDef', 'clipPath', 'color-profile', 'cursor', 'filter', 'font-face', 'font', 'foreignObject', 'image', 'marker', 'mask', 'pattern', 'script', 'style', 'switch', 'text', 'view'])\n  },\n  mpath: {\n    attrsGroups: new Set(['core', 'xlink']),\n    attrs: new Set(['externalResourcesRequired', 'href', 'xlink:href']),\n    contentGroups: new Set(['descriptive'])\n  },\n  path: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'graphicalEvent', 'presentation']),\n    attrs: new Set(['class', 'd', 'externalResourcesRequired', 'pathLength', 'style', 'transform']),\n    contentGroups: new Set(['animation', 'descriptive'])\n  },\n  pattern: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'presentation', 'xlink']),\n    attrs: new Set(['class', 'externalResourcesRequired', 'height', 'href', 'patternContentUnits', 'patternTransform', 'patternUnits', 'preserveAspectRatio', 'style', 'viewBox', 'width', 'x', 'xlink:href', 'y']),\n    defaults: {\n      patternUnits: 'objectBoundingBox',\n      patternContentUnits: 'userSpaceOnUse',\n      x: '0',\n      y: '0',\n      width: '0',\n      height: '0',\n      preserveAspectRatio: 'xMidYMid meet'\n    },\n    contentGroups: new Set(['animation', 'descriptive', 'paintServer', 'shape', 'structural']),\n    content: new Set(['a', 'altGlyphDef', 'clipPath', 'color-profile', 'cursor', 'filter', 'font-face', 'font', 'foreignObject', 'image', 'marker', 'mask', 'pattern', 'script', 'style', 'switch', 'text', 'view'])\n  },\n  polygon: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'graphicalEvent', 'presentation']),\n    attrs: new Set(['class', 'externalResourcesRequired', 'points', 'style', 'transform']),\n    contentGroups: new Set(['animation', 'descriptive'])\n  },\n  polyline: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'graphicalEvent', 'presentation']),\n    attrs: new Set(['class', 'externalResourcesRequired', 'points', 'style', 'transform']),\n    contentGroups: new Set(['animation', 'descriptive'])\n  },\n  radialGradient: {\n    attrsGroups: new Set(['core', 'presentation', 'xlink']),\n    attrs: new Set(['class', 'cx', 'cy', 'externalResourcesRequired', 'fr', 'fx', 'fy', 'gradientTransform', 'gradientUnits', 'href', 'r', 'spreadMethod', 'style', 'xlink:href']),\n    defaults: {\n      gradientUnits: 'objectBoundingBox',\n      cx: '50%',\n      cy: '50%',\n      r: '50%'\n    },\n    contentGroups: new Set(['descriptive']),\n    content: new Set(['animate', 'animateTransform', 'set', 'stop'])\n  },\n  meshGradient: {\n    attrsGroups: new Set(['core', 'presentation', 'xlink']),\n    attrs: new Set(['class', 'style', 'x', 'y', 'gradientUnits', 'transform']),\n    contentGroups: new Set(['descriptive', 'paintServer', 'animation']),\n    content: new Set(['meshRow'])\n  },\n  meshRow: {\n    attrsGroups: new Set(['core', 'presentation']),\n    attrs: new Set(['class', 'style']),\n    contentGroups: new Set(['descriptive']),\n    content: new Set(['meshPatch'])\n  },\n  meshPatch: {\n    attrsGroups: new Set(['core', 'presentation']),\n    attrs: new Set(['class', 'style']),\n    contentGroups: new Set(['descriptive']),\n    content: new Set(['stop'])\n  },\n  rect: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'graphicalEvent', 'presentation']),\n    attrs: new Set(['class', 'externalResourcesRequired', 'height', 'rx', 'ry', 'style', 'transform', 'width', 'x', 'y']),\n    defaults: {\n      x: '0',\n      y: '0'\n    },\n    contentGroups: new Set(['animation', 'descriptive'])\n  },\n  script: {\n    attrsGroups: new Set(['core', 'xlink']),\n    attrs: new Set(['externalResourcesRequired', 'type', 'href', 'xlink:href'])\n  },\n  set: {\n    attrsGroups: new Set(['animation', 'animationAttributeTarget', 'animationTiming', 'conditionalProcessing', 'core', 'xlink']),\n    attrs: new Set(['externalResourcesRequired', 'to']),\n    contentGroups: new Set(['descriptive'])\n  },\n  solidColor: {\n    attrsGroups: new Set(['core', 'presentation']),\n    attrs: new Set(['class', 'style']),\n    contentGroups: new Set(['paintServer'])\n  },\n  stop: {\n    attrsGroups: new Set(['core', 'presentation']),\n    attrs: new Set(['class', 'style', 'offset', 'path']),\n    content: new Set(['animate', 'animateColor', 'set'])\n  },\n  style: {\n    attrsGroups: new Set(['core']),\n    attrs: new Set(['type', 'media', 'title']),\n    defaults: {\n      type: 'text/css'\n    }\n  },\n  svg: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'documentEvent', 'graphicalEvent', 'presentation']),\n    attrs: new Set(['baseProfile', 'class', 'contentScriptType', 'contentStyleType', 'height', 'preserveAspectRatio', 'style', 'version', 'viewBox', 'width', 'x', 'y', 'zoomAndPan']),\n    defaults: {\n      x: '0',\n      y: '0',\n      width: '100%',\n      height: '100%',\n      preserveAspectRatio: 'xMidYMid meet',\n      zoomAndPan: 'magnify',\n      version: '1.1',\n      baseProfile: 'none',\n      contentScriptType: 'application/ecmascript',\n      contentStyleType: 'text/css'\n    },\n    contentGroups: new Set(['animation', 'descriptive', 'paintServer', 'shape', 'structural']),\n    content: new Set(['a', 'altGlyphDef', 'clipPath', 'color-profile', 'cursor', 'filter', 'font-face', 'font', 'foreignObject', 'image', 'marker', 'mask', 'pattern', 'script', 'style', 'switch', 'text', 'view'])\n  },\n  switch: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'graphicalEvent', 'presentation']),\n    attrs: new Set(['class', 'externalResourcesRequired', 'style', 'transform']),\n    contentGroups: new Set(['animation', 'descriptive', 'shape']),\n    content: new Set(['a', 'foreignObject', 'g', 'image', 'svg', 'switch', 'text', 'use'])\n  },\n  symbol: {\n    attrsGroups: new Set(['core', 'graphicalEvent', 'presentation']),\n    attrs: new Set(['class', 'externalResourcesRequired', 'preserveAspectRatio', 'refX', 'refY', 'style', 'viewBox']),\n    defaults: {\n      refX: '0',\n      refY: '0'\n    },\n    contentGroups: new Set(['animation', 'descriptive', 'paintServer', 'shape', 'structural']),\n    content: new Set(['a', 'altGlyphDef', 'clipPath', 'color-profile', 'cursor', 'filter', 'font-face', 'font', 'foreignObject', 'image', 'marker', 'mask', 'pattern', 'script', 'style', 'switch', 'text', 'view'])\n  },\n  text: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'graphicalEvent', 'presentation']),\n    attrs: new Set(['class', 'dx', 'dy', 'externalResourcesRequired', 'lengthAdjust', 'rotate', 'style', 'textLength', 'transform', 'x', 'y']),\n    defaults: {\n      x: '0',\n      y: '0',\n      lengthAdjust: 'spacing'\n    },\n    contentGroups: new Set(['animation', 'descriptive', 'textContentChild']),\n    content: new Set(['a'])\n  },\n  textPath: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'graphicalEvent', 'presentation', 'xlink']),\n    attrs: new Set(['class', 'd', 'externalResourcesRequired', 'href', 'method', 'spacing', 'startOffset', 'style', 'xlink:href']),\n    defaults: {\n      startOffset: '0',\n      method: 'align',\n      spacing: 'exact'\n    },\n    contentGroups: new Set(['descriptive']),\n    content: new Set(['a', 'altGlyph', 'animate', 'animateColor', 'set', 'tref', 'tspan'])\n  },\n  title: {\n    attrsGroups: new Set(['core']),\n    attrs: new Set(['class', 'style'])\n  },\n  tref: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'graphicalEvent', 'presentation', 'xlink']),\n    attrs: new Set(['class', 'externalResourcesRequired', 'href', 'style', 'xlink:href']),\n    contentGroups: new Set(['descriptive']),\n    content: new Set(['animate', 'animateColor', 'set'])\n  },\n  tspan: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'graphicalEvent', 'presentation']),\n    attrs: new Set(['class', 'dx', 'dy', 'externalResourcesRequired', 'lengthAdjust', 'rotate', 'style', 'textLength', 'x', 'y']),\n    contentGroups: new Set(['descriptive']),\n    content: new Set(['a', 'altGlyph', 'animate', 'animateColor', 'set', 'tref', 'tspan'])\n  },\n  use: {\n    attrsGroups: new Set(['conditionalProcessing', 'core', 'graphicalEvent', 'presentation', 'xlink']),\n    attrs: new Set(['class', 'externalResourcesRequired', 'height', 'href', 'style', 'transform', 'width', 'x', 'xlink:href', 'y']),\n    defaults: {\n      x: '0',\n      y: '0'\n    },\n    contentGroups: new Set(['animation', 'descriptive'])\n  },\n  view: {\n    attrsGroups: new Set(['core']),\n    attrs: new Set(['externalResourcesRequired', 'preserveAspectRatio', 'viewBox', 'viewTarget', 'zoomAndPan']),\n    contentGroups: new Set(['descriptive'])\n  },\n  vkern: {\n    attrsGroups: new Set(['core']),\n    attrs: new Set(['u1', 'g1', 'u2', 'g2', 'k'])\n  }\n};\n\n// https://wiki.inkscape.org/wiki/index.php/Inkscape-specific_XML_attributes\nexports.editorNamespaces = new Set(['http://creativecommons.org/ns#', 'http://inkscape.sourceforge.net/DTD/sodipodi-0.dtd', 'http://ns.adobe.com/AdobeIllustrator/10.0/', 'http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/', 'http://ns.adobe.com/Extensibility/1.0/', 'http://ns.adobe.com/Flows/1.0/', 'http://ns.adobe.com/GenericCustomNamespace/1.0/', 'http://ns.adobe.com/Graphs/1.0/', 'http://ns.adobe.com/ImageReplacement/1.0/', 'http://ns.adobe.com/SaveForWeb/1.0/', 'http://ns.adobe.com/Variables/1.0/', 'http://ns.adobe.com/XPath/1.0/', 'http://purl.org/dc/elements/1.1/', 'http://schemas.microsoft.com/visio/2003/SVGExtensions/', 'http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd', 'http://taptrix.com/vectorillustrator/svg_extensions', 'http://www.bohemiancoding.com/sketch/ns', 'http://www.figma.com/figma/ns', 'http://www.inkscape.org/namespaces/inkscape', 'http://www.serif.com/', 'http://www.vector.evaxdesign.sk', 'http://www.w3.org/1999/02/22-rdf-syntax-ns#']);\n\n/**\n * @see https://www.w3.org/TR/SVG11/linking.html#processingIRI\n */\nexports.referencesProps = new Set(['clip-path', 'color-profile', 'fill', 'filter', 'marker-end', 'marker-mid', 'marker-start', 'mask', 'stroke', 'style']);\n\n/**\n * @see https://www.w3.org/TR/SVG11/propidx.html\n */\nexports.inheritableAttrs = new Set(['clip-rule', 'color-interpolation-filters', 'color-interpolation', 'color-profile', 'color-rendering', 'color', 'cursor', 'direction', 'dominant-baseline', 'fill-opacity', 'fill-rule', 'fill', 'font-family', 'font-size-adjust', 'font-size', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'font', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'image-rendering', 'letter-spacing', 'marker-end', 'marker-mid', 'marker-start', 'marker', 'paint-order', 'pointer-events', 'shape-rendering', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'stroke', 'text-anchor', 'text-rendering', 'transform', 'visibility', 'word-spacing', 'writing-mode']);\nexports.presentationNonInheritableGroupAttrs = new Set(['clip-path', 'display', 'filter', 'mask', 'opacity', 'text-decoration', 'transform', 'unicode-bidi']);\n\n/**\n * https://www.w3.org/TR/SVG11/single-page.html#types-ColorKeywords\n *\n * @type {Record<string, string>}\n */\nexports.colorsNames = {\n  aliceblue: '#f0f8ff',\n  antiquewhite: '#faebd7',\n  aqua: '#0ff',\n  aquamarine: '#7fffd4',\n  azure: '#f0ffff',\n  beige: '#f5f5dc',\n  bisque: '#ffe4c4',\n  black: '#000',\n  blanchedalmond: '#ffebcd',\n  blue: '#00f',\n  blueviolet: '#8a2be2',\n  brown: '#a52a2a',\n  burlywood: '#deb887',\n  cadetblue: '#5f9ea0',\n  chartreuse: '#7fff00',\n  chocolate: '#d2691e',\n  coral: '#ff7f50',\n  cornflowerblue: '#6495ed',\n  cornsilk: '#fff8dc',\n  crimson: '#dc143c',\n  cyan: '#0ff',\n  darkblue: '#00008b',\n  darkcyan: '#008b8b',\n  darkgoldenrod: '#b8860b',\n  darkgray: '#a9a9a9',\n  darkgreen: '#006400',\n  darkgrey: '#a9a9a9',\n  darkkhaki: '#bdb76b',\n  darkmagenta: '#8b008b',\n  darkolivegreen: '#556b2f',\n  darkorange: '#ff8c00',\n  darkorchid: '#9932cc',\n  darkred: '#8b0000',\n  darksalmon: '#e9967a',\n  darkseagreen: '#8fbc8f',\n  darkslateblue: '#483d8b',\n  darkslategray: '#2f4f4f',\n  darkslategrey: '#2f4f4f',\n  darkturquoise: '#00ced1',\n  darkviolet: '#9400d3',\n  deeppink: '#ff1493',\n  deepskyblue: '#00bfff',\n  dimgray: '#696969',\n  dimgrey: '#696969',\n  dodgerblue: '#1e90ff',\n  firebrick: '#b22222',\n  floralwhite: '#fffaf0',\n  forestgreen: '#228b22',\n  fuchsia: '#f0f',\n  gainsboro: '#dcdcdc',\n  ghostwhite: '#f8f8ff',\n  gold: '#ffd700',\n  goldenrod: '#daa520',\n  gray: '#808080',\n  green: '#008000',\n  greenyellow: '#adff2f',\n  grey: '#808080',\n  honeydew: '#f0fff0',\n  hotpink: '#ff69b4',\n  indianred: '#cd5c5c',\n  indigo: '#4b0082',\n  ivory: '#fffff0',\n  khaki: '#f0e68c',\n  lavender: '#e6e6fa',\n  lavenderblush: '#fff0f5',\n  lawngreen: '#7cfc00',\n  lemonchiffon: '#fffacd',\n  lightblue: '#add8e6',\n  lightcoral: '#f08080',\n  lightcyan: '#e0ffff',\n  lightgoldenrodyellow: '#fafad2',\n  lightgray: '#d3d3d3',\n  lightgreen: '#90ee90',\n  lightgrey: '#d3d3d3',\n  lightpink: '#ffb6c1',\n  lightsalmon: '#ffa07a',\n  lightseagreen: '#20b2aa',\n  lightskyblue: '#87cefa',\n  lightslategray: '#789',\n  lightslategrey: '#789',\n  lightsteelblue: '#b0c4de',\n  lightyellow: '#ffffe0',\n  lime: '#0f0',\n  limegreen: '#32cd32',\n  linen: '#faf0e6',\n  magenta: '#f0f',\n  maroon: '#800000',\n  mediumaquamarine: '#66cdaa',\n  mediumblue: '#0000cd',\n  mediumorchid: '#ba55d3',\n  mediumpurple: '#9370db',\n  mediumseagreen: '#3cb371',\n  mediumslateblue: '#7b68ee',\n  mediumspringgreen: '#00fa9a',\n  mediumturquoise: '#48d1cc',\n  mediumvioletred: '#c71585',\n  midnightblue: '#191970',\n  mintcream: '#f5fffa',\n  mistyrose: '#ffe4e1',\n  moccasin: '#ffe4b5',\n  navajowhite: '#ffdead',\n  navy: '#000080',\n  oldlace: '#fdf5e6',\n  olive: '#808000',\n  olivedrab: '#6b8e23',\n  orange: '#ffa500',\n  orangered: '#ff4500',\n  orchid: '#da70d6',\n  palegoldenrod: '#eee8aa',\n  palegreen: '#98fb98',\n  paleturquoise: '#afeeee',\n  palevioletred: '#db7093',\n  papayawhip: '#ffefd5',\n  peachpuff: '#ffdab9',\n  peru: '#cd853f',\n  pink: '#ffc0cb',\n  plum: '#dda0dd',\n  powderblue: '#b0e0e6',\n  purple: '#800080',\n  rebeccapurple: '#639',\n  red: '#f00',\n  rosybrown: '#bc8f8f',\n  royalblue: '#4169e1',\n  saddlebrown: '#8b4513',\n  salmon: '#fa8072',\n  sandybrown: '#f4a460',\n  seagreen: '#2e8b57',\n  seashell: '#fff5ee',\n  sienna: '#a0522d',\n  silver: '#c0c0c0',\n  skyblue: '#87ceeb',\n  slateblue: '#6a5acd',\n  slategray: '#708090',\n  slategrey: '#708090',\n  snow: '#fffafa',\n  springgreen: '#00ff7f',\n  steelblue: '#4682b4',\n  tan: '#d2b48c',\n  teal: '#008080',\n  thistle: '#d8bfd8',\n  tomato: '#ff6347',\n  turquoise: '#40e0d0',\n  violet: '#ee82ee',\n  wheat: '#f5deb3',\n  white: '#fff',\n  whitesmoke: '#f5f5f5',\n  yellow: '#ff0',\n  yellowgreen: '#9acd32'\n};\n\n/**\n * @type {Record<string, string>}\n */\nexports.colorsShortNames = {\n  '#f0ffff': 'azure',\n  '#f5f5dc': 'beige',\n  '#ffe4c4': 'bisque',\n  '#a52a2a': 'brown',\n  '#ff7f50': 'coral',\n  '#ffd700': 'gold',\n  '#808080': 'gray',\n  '#008000': 'green',\n  '#4b0082': 'indigo',\n  '#fffff0': 'ivory',\n  '#f0e68c': 'khaki',\n  '#faf0e6': 'linen',\n  '#800000': 'maroon',\n  '#000080': 'navy',\n  '#808000': 'olive',\n  '#ffa500': 'orange',\n  '#da70d6': 'orchid',\n  '#cd853f': 'peru',\n  '#ffc0cb': 'pink',\n  '#dda0dd': 'plum',\n  '#800080': 'purple',\n  '#f00': 'red',\n  '#ff0000': 'red',\n  '#fa8072': 'salmon',\n  '#a0522d': 'sienna',\n  '#c0c0c0': 'silver',\n  '#fffafa': 'snow',\n  '#d2b48c': 'tan',\n  '#008080': 'teal',\n  '#ff6347': 'tomato',\n  '#ee82ee': 'violet',\n  '#f5deb3': 'wheat'\n};\n\n/**\n * @see https://www.w3.org/TR/SVG11/single-page.html#types-DataTypeColor\n */\nexports.colorsProps = new Set(['color', 'fill', 'flood-color', 'lighting-color', 'stop-color', 'stroke']);\n\n/** @see https://developer.mozilla.org/docs/Web/CSS/Pseudo-classes */\nexports.pseudoClasses = {\n  displayState: new Set(['fullscreen', 'modal', 'picture-in-picture']),\n  input: new Set(['autofill', 'blank', 'checked', 'default', 'disabled', 'enabled', 'in-range', 'indetermined', 'invalid', 'optional', 'out-of-range', 'placeholder-shown', 'read-only', 'read-write', 'required', 'user-invalid', 'valid']),\n  linguistic: new Set(['dir', 'lang']),\n  location: new Set(['any-link', 'link', 'local-link', 'scope', 'target-within', 'target', 'visited']),\n  resourceState: new Set(['playing', 'paused']),\n  timeDimensional: new Set(['current', 'past', 'future']),\n  treeStructural: new Set(['empty', 'first-child', 'first-of-type', 'last-child', 'last-of-type', 'nth-child', 'nth-last-child', 'nth-last-of-type', 'nth-of-type', 'only-child', 'only-of-type', 'root']),\n  userAction: new Set(['active', 'focus-visible', 'focus-within', 'focus', 'hover']),\n  functional: new Set(['is', 'not', 'where', 'has'])\n};","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}