{"ast":null,"code":"'use strict';\n\nconst {\n  hasOwnProperty\n} = Object.prototype;\nfunction buildMap(list, caseInsensitive) {\n  const map = Object.create(null);\n  if (!Array.isArray(list)) {\n    return null;\n  }\n  for (let name of list) {\n    if (caseInsensitive) {\n      name = name.toLowerCase();\n    }\n    map[name] = true;\n  }\n  return map;\n}\nfunction buildList(data) {\n  if (!data) {\n    return null;\n  }\n  const tags = buildMap(data.tags, true);\n  const ids = buildMap(data.ids);\n  const classes = buildMap(data.classes);\n  if (tags === null && ids === null && classes === null) {\n    return null;\n  }\n  return {\n    tags,\n    ids,\n    classes\n  };\n}\nfunction buildIndex(data) {\n  let scopes = false;\n  if (data.scopes && Array.isArray(data.scopes)) {\n    scopes = Object.create(null);\n    for (let i = 0; i < data.scopes.length; i++) {\n      const list = data.scopes[i];\n      if (!list || !Array.isArray(list)) {\n        throw new Error('Wrong usage format');\n      }\n      for (const name of list) {\n        if (hasOwnProperty.call(scopes, name)) {\n          throw new Error(`Class can't be used for several scopes: ${name}`);\n        }\n        scopes[name] = i + 1;\n      }\n    }\n  }\n  return {\n    whitelist: buildList(data),\n    blacklist: buildList(data.blacklist),\n    scopes\n  };\n}\nexports.buildIndex = buildIndex;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}